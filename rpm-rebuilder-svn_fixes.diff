diff -Naur rpm-rebuilder-0.28/chrooted-install rpm-rebuilder/chrooted-install
--- rpm-rebuilder-0.28/chrooted-install	2005-10-03 17:21:42.000000000 +0200
+++ rpm-rebuilder/chrooted-install	2012-02-11 20:28:51.620478049 +0100
@@ -217,7 +217,7 @@
     fi
 
     # make sure urpmi is installed
-    chroot $root /bin/sh -c "/bin/rpm -ivh $inst/urpmi-[0-9]*" || :
+    chroot $root /bin/sh -c "/bin/rpm -ivh --nodeps $inst/urpmi-[0-9]*" || :
 fi
 
 # update urpmi database
diff -Naur rpm-rebuilder-0.28/compute-compile-order rpm-rebuilder/compute-compile-order
--- rpm-rebuilder-0.28/compute-compile-order	2002-03-04 19:24:55.000000000 +0100
+++ rpm-rebuilder/compute-compile-order	2012-02-11 18:40:02.625112972 +0100
@@ -90,7 +90,7 @@
     
 # sort in reverse order according to srpm_count
 def count_sort(a, b):
-    return cmp(srpm_count[b], srpm_count[a])
+    return cmp(srpm_count[b], srpm_count[a]) or cmp(a, b)
 
 def uniquify(list):
     sorted=list
@@ -122,7 +122,8 @@
     rpm2srpm_assoc[pkg[rpm.RPMTAG_NAME]]=srpm
     for prov in pkg.provides():
         rpm2srpm_assoc[prov[0]]=srpm
-        
+    pkg.cleanup()
+
 sys.stderr.write("reading source rpms\n")
 for s in srpms:
     file=srpms_dir + '/' + s
@@ -132,6 +133,7 @@
         sys.stderr.write("error reading %s\n" % file)
         continue
     process_requires(pkg[rpm.RPMTAG_NAME], pkg.requires(), pkg.prereq())
+    pkg.cleanup()
 
 sys.stderr.write("building closures\n")
 for n in srpm_dep.keys():
@@ -169,11 +171,17 @@
 
 print '#!/bin/sh'
 print 'uno=$1;ord=$2'
+print 'link_src() { phase=$1; name=$2; if [ -f $uno/"$name"-[0-9]* ]; then src=$uno/"$name"-[0-9]*; ln -s $src $ord/phase${phase}_$(basename $src); fi; }'
 
+last_srpm_count=None
+phase=0
 for f in FORCED + names:
-    print '[ -f $uno/%s-[0-9]* ] && ln -s $uno/%s-[0-9]* $ord/%05d-%s-build.src.rpm' % (f, f, rank, f)
-    rank=rank+1
-    
+    if srpm_count.has_key(f):
+        if srpm_count[f] != last_srpm_count:
+            phase += 1
+            last_srpm_count = srpm_count[f]
+    print 'link_src %05d %s' % (phase, f)
+
 # Local variables:
 # mode: python
 # End:
diff -Naur rpm-rebuilder-0.28/doble rpm-rebuilder/doble
--- rpm-rebuilder-0.28/doble	2003-09-26 11:01:12.000000000 +0200
+++ rpm-rebuilder/doble	2012-02-11 20:45:05.799532521 +0100
@@ -16,7 +16,8 @@
 
 foreach (@list) {
     next unless /\.rpm(\.log)?$/;
-    ($name,$ext) = m|([^/]+)-[^-]+-[^-]+\.([^.]+)\.rpm(\.log)?$|;
+#    ($name,$ext) = m|([^/]+)-[^-]+-[^-]+\.([^.]+)\.rpm(\.log)?$|;
+    ($name,$ext) = m|([^/]+?)-[0-9].*\.rpm(\.log)?$|;
     $name="$name.$ext";
     if ($name eq $last) {
         if ((stat($_))[9] < (stat($lastfile))[9]) { print "$_ "; next; }
diff -Naur rpm-rebuilder-0.28/README rpm-rebuilder/README
--- rpm-rebuilder-0.28/README	2005-11-05 00:55:14.000000000 +0100
+++ rpm-rebuilder/README	2012-02-11 18:40:02.623112972 +0100
@@ -48,13 +48,17 @@
 symlinks sorted alphabetically. An orderer script can be generated by
 the compute-compile-order script.
 
+ADD_URPMI_MEDIA if set, a media containing packages from RPM_DEST_DIR
+will be added, so that buildrequires can be pulled from previously
+rebuilt packages.
+
+REBUILD_HDLIST may point to a script used to update hdlists in
+build packages repository RPM_DEST_DIR (for example: genhdlist2).
+
 NO_URPMI_DEP if not set, rpm-rebuilder will install and remove via
 sudo urpmi.update, sudo urpmi and sudo urpme to install dependencies
 and remove conflicts (you need to setup sudo not to ask a pass).
 
-AUTOMAKE_DEP if set, provides a set of packages to force to install at
-each compilation step. On Mandrakelinux 9.0 it defaults to automake-1.4.
-
 RPM_DEBUG_DEST_DIR if set, points to the directory where to store
 -debug packages.
 
diff -Naur rpm-rebuilder-0.28/rebuild-rpm rpm-rebuilder/rebuild-rpm
--- rpm-rebuilder-0.28/rebuild-rpm	2005-09-11 02:10:30.000000000 +0200
+++ rpm-rebuilder/rebuild-rpm	2012-02-11 20:28:40.409477422 +0100
@@ -48,7 +48,7 @@
 
 SPEC=`rpm2cpio $SRC | cpio -it | fgrep .spec`
 
-rpm -i $SRC
+rpm -i --nodeps $SRC
 
 increment-release.py $TOPDIR/SPECS/$SPEC "$EMAIL" "$CHANGELOG" > $TOPDIR/SPECS/$SPEC.new
 mv -f $TOPDIR/SPECS/$SPEC.new $TOPDIR/SPECS/$SPEC
diff -Naur rpm-rebuilder-0.28/rpm-rebuilder rpm-rebuilder/rpm-rebuilder
--- rpm-rebuilder-0.28/rpm-rebuilder	2008-01-07 14:14:40.000000000 +0100
+++ rpm-rebuilder/rpm-rebuilder	2012-02-11 18:40:02.625112972 +0100
@@ -60,11 +60,6 @@
 MDK_VERSION=`perl -ne '/(\d+)\.(\d)\.?(\d)?/ and print $1 * 10000 + $2 * 100 + ($3||0)' /etc/mandrake-release`
 fi
 
-if [[ "$MDK_VERSION" -ge "90000" ]]; then
-# Force reinstallation of automake 1.4 once we are finished with automake1.6
-AUTOMAKE_DEP=${AUTOMAKE_DEP:-"automake-1.4"}
-fi
-
 ## Functions
 ## Steps:
 #	setup
@@ -260,9 +255,33 @@
     else
 	CHROOT_CMD=true
     fi
+
+    if [ -n "$REBUILD_HDLIST" ]; then
+        $REBUILD_HDLIST $RPM_DEST_DIR
+    fi
+    if [ -n "$ADD_URPMI_MEDIA" ]; then
+        for rep in $RPM_DEST_DIR $RPMS_DIRS; do
+            MEDIA_NAME="rb_$(echo $rep | md5sum | awk '{ print $1 }')"
+            grep -q "^$MEDIA_NAME\b" $CHROOT_DIR/etc/urpmi/urpmi.cfg && continue
+            sudo /usr/sbin/urpmi.addmedia $CHROOT_ARGS $MEDIA_NAME $rep
+        done
+    fi
+
+    new_package_built=0
+    previous_build_phase=
     for p in $ORDERED/*.src.rpm; do
 	NAME=`basename $p`
 
+        build_phase=${NAME%%_*}
+        if [ "$build_phase" != "$previous_build_phase" ]; then
+            echo "entering build phase $build_phase"
+            if [ -n "$REBUILD_HDLIST" ] && [ $new_package_built -gt 0 ]; then
+                $REBUILD_HDLIST $RPM_DEST_DIR
+            fi
+            previous_build_phase=$build_phase
+            new_package_built=0
+        fi
+
 	# check if a log doesn't already exist
 	if [ -e $DONE/$NAME.log ]; then
 	    echo "$NAME already compiled"
@@ -294,6 +313,8 @@
 	    rm -rf $RPM_TOP_DIR/BUILD/* $RPM_TOP_DIR/SOURCES/* $RPM_TOP_DIR/SPECS/*
 	fi
 	
+	status=0
+
 	# install deps and remove conflicts
 	if [ -z "$NO_URPMI_DEP" ]; then
 	    sudo /usr/sbin/urpmi.update -a < /dev/zero
@@ -308,35 +329,43 @@
 		echo "removing $conflicts"
 		sudo /usr/sbin/urpme $CHROOT_ARGS --auto $conflicts < /dev/zero
 	    }
-	    for dep in $AUTOMAKE_DEP `rpm -qp --qf '[%{REQUIRENAME}\n]' $p | fgrep -v 'rpmlib('`; do
-		echo "using urpmi to install $dep" < /dev/zero
-		sudo /usr/sbin/urpmi $CHROOT_ARGS --auto $dep < /dev/zero
-	    done
-	fi
-	
-	# use  --define  "_rpmdir $RPM_DEST_DIR" to put directly the RPMS to the dest dir.
-	set -x
-	$FAKEROOT $FAKEARCH rpm $CHROOT_ARGS -i --define  "_topdir $RPM_TOP_DIR"  $p < /dev/zero
-	status=0
-	set +x
-	if [ -n "$PKG_MODIFIER" ]; then
+	    echo "using urpmi to install deps" < /dev/zero
 	    set -x
-	    $PKG_MODIFIER ${CHROOT_DIR}$RPM_TOP_DIR/SPECS/*.spec < /dev/zero
+	    # FIXME: urpmi --buildrequires complains about bad signature from src.rpm,
+            #        because the pubkey may not be imported, disable signature check
+	    sudo /usr/sbin/urpmi $CHROOT_ARGS --auto --no-verify-rpm --buildrequires $p < /dev/zero
+	    # FIXME: urpmi --buildrequires status is always 0, fix urpmi
 	    status=$?
 	    set +x
 	fi
+	
+	if [ $status -eq 0 ]; then
+	    # use  --define  "_rpmdir $RPM_DEST_DIR" to put directly the RPMS to the dest dir.
+	    set -x
+	    $FAKEROOT $FAKEARCH rpm $CHROOT_ARGS -i --define  "_topdir $RPM_TOP_DIR"  $p < /dev/zero
+	    set +x
+
+	    if [ -n "$PKG_MODIFIER" ]; then
+	        set -x
+	        $PKG_MODIFIER ${CHROOT_DIR}$RPM_TOP_DIR/SPECS/*.spec < /dev/zero
+	        status=$?
+	        set +x
+	    fi
+        fi
+
 	if [ $status -eq 0 ]; then
 	    set -x
 	    if [ -n "$CHROOT" ]; then
-		sudo chroot $CHROOT_DIR su - builder -c "LC_ALL=en $FAKEROOT $FAKEARCH rpm $RPM_BUILD_OPT --clean --rmspec --rmsource --define  \"_topdir $RPM_TOP_DIR\" $RPM_TOP_DIR/SPECS/*.spec" < /dev/zero
+		sudo chroot $CHROOT_DIR su - builder -c "LC_ALL=C $FAKEROOT $FAKEARCH rpm $RPM_BUILD_OPT --clean --rmspec --rmsource --define  \"_topdir $RPM_TOP_DIR\" $RPM_TOP_DIR/SPECS/*.spec" < /dev/zero
 	    else
-		LC_ALL=en $FAKEROOT $FAKEARCH rpm $RPM_BUILD_OPT --clean --rmspec --rmsource --define  "_topdir $RPM_TOP_DIR" $RPM_TOP_DIR/SPECS/*.spec < /dev/zero
+		LC_ALL=C $FAKEROOT $FAKEARCH rpm $RPM_BUILD_OPT --clean --rmspec --rmsource --define  "_topdir $RPM_TOP_DIR" $RPM_TOP_DIR/SPECS/*.spec < /dev/zero
 	    fi
 	    status=$?
 	    set +x
 	fi
 	if [ $status -eq 0 ]; then
 	    echo done 1>&3
+	    new_package_built=1
 	    test -x /usr/bin/rpmlint && rpmlint $CHROOT_DIR$RPM_TOP_DIR/RPMS/*/*.rpm
 	    if [ -n "$INSTALL_RPMS" -a -x /usr/bin/sudo ]; then
 		if [ -n "$INSTALLER" ]; then
@@ -385,6 +414,10 @@
 	exec 1>&3
 	exec 2>&4
     done
+
+    if [ -n "$REBUILD_HDLIST" ] && [ $new_package_built -gt 0 ]; then
+        $REBUILD_HDLIST $RPM_DEST_DIR
+    fi
 }
 
 ## Process command line options
